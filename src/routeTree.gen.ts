/* prettier-ignore-start */

/* eslint-disable */
// @ts-nocheck
// noinspection JSUnusedGlobalSymbols
// This file is auto-generated by TanStack Router
// Import Routes
import { Route as rootRoute } from './routes/__root';
import { Route as AuthProfileRouteImport } from './routes/_auth/profile/route';
import { Route as AuthRouteImport } from './routes/_auth/route';
import { Route as AsideRouteImport } from './routes/aside/route';
import { Route as IndexImport } from './routes/index';
import { Route as InvoicesInvoiceIdImport } from './routes/invoices/$invoiceId';
import { Route as InvoicesIndexImport } from './routes/invoices/index';
import { Route as InvoicesRouteImport } from './routes/invoices/route';
import { Route as LoginRouteImport } from './routes/login/route';
import { createFileRoute } from '@tanstack/react-router';

// Create Virtual Routes

const ExpensiveIndexLazyImport = createFileRoute('/expensive/')();

// Create/Update Routes

const LoginRouteRoute = LoginRouteImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any);

const InvoicesRouteRoute = InvoicesRouteImport.update({
  path: '/invoices',
  getParentRoute: () => rootRoute,
} as any);

const AsideRouteRoute = AsideRouteImport.update({
  path: '/aside',
  getParentRoute: () => rootRoute,
} as any);

const AuthRouteRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any);

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any);

const ExpensiveIndexLazyRoute = ExpensiveIndexLazyImport.update({
  path: '/expensive/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/expensive/index.lazy').then((d) => d.Route));

const InvoicesIndexRoute = InvoicesIndexImport.update({
  path: '/',
  getParentRoute: () => InvoicesRouteRoute,
} as any);

const InvoicesInvoiceIdRoute = InvoicesInvoiceIdImport.update({
  path: '/$invoiceId',
  getParentRoute: () => InvoicesRouteRoute,
} as any);

const AuthProfileRouteRoute = AuthProfileRouteImport.update({
  path: '/profile',
  getParentRoute: () => AuthRouteRoute,
} as any);

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/';
      path: '/';
      fullPath: '/';
      preLoaderRoute: typeof IndexImport;
      parentRoute: typeof rootRoute;
    };
    '/_auth': {
      id: '/_auth';
      path: '';
      fullPath: '';
      preLoaderRoute: typeof AuthRouteImport;
      parentRoute: typeof rootRoute;
    };
    '/aside': {
      id: '/aside';
      path: '/aside';
      fullPath: '/aside';
      preLoaderRoute: typeof AsideRouteImport;
      parentRoute: typeof rootRoute;
    };
    '/invoices': {
      id: '/invoices';
      path: '/invoices';
      fullPath: '/invoices';
      preLoaderRoute: typeof InvoicesRouteImport;
      parentRoute: typeof rootRoute;
    };
    '/login': {
      id: '/login';
      path: '/login';
      fullPath: '/login';
      preLoaderRoute: typeof LoginRouteImport;
      parentRoute: typeof rootRoute;
    };
    '/_auth/profile': {
      id: '/_auth/profile';
      path: '/profile';
      fullPath: '/profile';
      preLoaderRoute: typeof AuthProfileRouteImport;
      parentRoute: typeof AuthRouteImport;
    };
    '/invoices/$invoiceId': {
      id: '/invoices/$invoiceId';
      path: '/$invoiceId';
      fullPath: '/invoices/$invoiceId';
      preLoaderRoute: typeof InvoicesInvoiceIdImport;
      parentRoute: typeof InvoicesRouteImport;
    };
    '/invoices/': {
      id: '/invoices/';
      path: '/';
      fullPath: '/invoices/';
      preLoaderRoute: typeof InvoicesIndexImport;
      parentRoute: typeof InvoicesRouteImport;
    };
    '/expensive/': {
      id: '/expensive/';
      path: '/expensive';
      fullPath: '/expensive';
      preLoaderRoute: typeof ExpensiveIndexLazyImport;
      parentRoute: typeof rootRoute;
    };
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  AuthRouteRoute: AuthRouteRoute.addChildren({ AuthProfileRouteRoute }),
  AsideRouteRoute,
  InvoicesRouteRoute: InvoicesRouteRoute.addChildren({
    InvoicesInvoiceIdRoute,
    InvoicesIndexRoute,
  }),
  LoginRouteRoute,
  ExpensiveIndexLazyRoute,
});

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_auth",
        "/aside",
        "/invoices",
        "/login",
        "/expensive/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_auth": {
      "filePath": "_auth/route.tsx",
      "children": [
        "/_auth/profile"
      ]
    },
    "/aside": {
      "filePath": "aside/route.tsx"
    },
    "/invoices": {
      "filePath": "invoices/route.tsx",
      "children": [
        "/invoices/$invoiceId",
        "/invoices/"
      ]
    },
    "/login": {
      "filePath": "login/route.tsx"
    },
    "/_auth/profile": {
      "filePath": "_auth/profile/route.tsx",
      "parent": "/_auth"
    },
    "/invoices/$invoiceId": {
      "filePath": "invoices/$invoiceId.tsx",
      "parent": "/invoices"
    },
    "/invoices/": {
      "filePath": "invoices/index.tsx",
      "parent": "/invoices"
    },
    "/expensive/": {
      "filePath": "expensive/index.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */

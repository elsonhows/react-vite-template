/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as QueryImport } from './routes/query'
import { Route as EnvImport } from './routes/env'
import { Route as IndexImport } from './routes/index'

// Create Virtual Routes

const ExpensiveIndexLazyImport = createFileRoute('/expensive/')()

// Create/Update Routes

const QueryRoute = QueryImport.update({
  path: '/query',
  getParentRoute: () => rootRoute,
} as any)

const EnvRoute = EnvImport.update({
  path: '/env',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ExpensiveIndexLazyRoute = ExpensiveIndexLazyImport.update({
  path: '/expensive/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/expensive/index.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/env': {
      id: '/env'
      path: '/env'
      fullPath: '/env'
      preLoaderRoute: typeof EnvImport
      parentRoute: typeof rootRoute
    }
    '/query': {
      id: '/query'
      path: '/query'
      fullPath: '/query'
      preLoaderRoute: typeof QueryImport
      parentRoute: typeof rootRoute
    }
    '/expensive/': {
      id: '/expensive/'
      path: '/expensive'
      fullPath: '/expensive'
      preLoaderRoute: typeof ExpensiveIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  EnvRoute,
  QueryRoute,
  ExpensiveIndexLazyRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/env",
        "/query",
        "/expensive/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/env": {
      "filePath": "env.tsx"
    },
    "/query": {
      "filePath": "query.tsx"
    },
    "/expensive/": {
      "filePath": "expensive/index.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
